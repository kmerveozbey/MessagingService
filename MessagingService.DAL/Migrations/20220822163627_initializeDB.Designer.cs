// <auto-generated />
using System;
using MessagingService.DAL.ContextInfo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MessagingService.DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220822163627_initializeDB")]
    partial class initializeDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MessagingService.Entity.Models.ActivityLogListModel", b =>
                {
                    b.Property<Guid>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityID");

                    b.HasIndex("LoginUserName");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.BlockListModel", b =>
                {
                    b.Property<Guid>("BlockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockedUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinderingUserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BlockID");

                    b.HasIndex("BlockedUserName");

                    b.HasIndex("HinderingUserName");

                    b.ToTable("BlockLists");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.MessageModel", b =>
                {
                    b.Property<Guid>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderUserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverUserName");

                    b.HasIndex("SenderUserName");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.UserModel", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.ActivityLogListModel", b =>
                {
                    b.HasOne("MessagingService.Entity.Models.UserModel", "LoginUser")
                        .WithMany()
                        .HasForeignKey("LoginUserName");

                    b.Navigation("LoginUser");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.BlockListModel", b =>
                {
                    b.HasOne("MessagingService.Entity.Models.UserModel", "BlockedUser")
                        .WithMany()
                        .HasForeignKey("BlockedUserName");

                    b.HasOne("MessagingService.Entity.Models.UserModel", "HinderUser")
                        .WithMany()
                        .HasForeignKey("HinderingUserName");

                    b.Navigation("BlockedUser");

                    b.Navigation("HinderUser");
                });

            modelBuilder.Entity("MessagingService.Entity.Models.MessageModel", b =>
                {
                    b.HasOne("MessagingService.Entity.Models.UserModel", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverUserName");

                    b.HasOne("MessagingService.Entity.Models.UserModel", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderUserName");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });
#pragma warning restore 612, 618
        }
    }
}
